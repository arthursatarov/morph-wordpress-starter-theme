/**
 * CSS Utilities
 *
 * This SASS file contains a collection of CSS utility classes
 * It imports tokens for consistent theming and configuration.
 *
 * Table of content:
 * 	1. Layout
 * 	2. Flexbox & grid
 * 	3. Spacing
 * 	4. Sizes
 * 	5. Typography
 * 	6. Colors
 * 	7. Borders
 * 	7. Effects
 */

@use 'sass:meta';
@use 'sass:map';
@use '../tokens';
@use '../themes/default';

// =========================================================
// Layout
// =========================================================

// Overflow
// ---------------------------------------------------------
.overflow-auto { overflow: auto; }
.overflow-hidden { overflow: hidden; }
.overflow-clip { overflow: clip; }
.overflow-visible { overflow: visible; }
.overflow-scroll { overflow: scroll; }

.overflow-x-auto { overflow-x: auto; }
.overflow-x-hidden { overflow-x: hidden; }
.overflow-x-clip { overflow-x: clip; }
.overflow-x-visible { overflow-x: visible; }
.overflow-x-scroll { overflow-x: scroll; }

.overflow-y-auto { overflow-y: auto; }
.overflow-y-hidden { overflow-y: hidden; }
.overflow-y-clip { overflow-y: clip; }
.overflow-y-visible { overflow-y: visible; }
.overflow-y-scroll { overflow-y: scroll; }

// =========================================================
// Flexbox & grid
// =========================================================

// Justify & align
// ---------------------------------------------------------
.justify-normal { justify-content: normal; }
.justify-start { justify-content: flex-start; }
.justify-end { justify-content: flex-end; }
.justify-center { justify-content: center; }
.justify-between { justify-content: space-between; }
.justify-around { justify-content: space-around; }
.justify-evenly { justify-content: space-evenly; }
.justify-stretch { justify-content: stretch; }

.content-normal { align-content: normal; }
.content-start { align-content: flex-start; }
.content-end { align-content: flex-end; }
.content-center { align-content: center; }
.content-between { align-content: space-between; }
.content-around { align-content: space-around; }
.content-evenly { align-content: space-evenly; }
.content-baseline { align-content: baseline; }
.content-stretch { align-content: stretch; }

.items-start { align-items: flex-start; }
.items-end { align-items: flex-end; }
.items-center { align-items: center; }
.items-baseline { align-items: baseline; }
.items-stretch { align-items: stretch; }

.self-start { align-self: flex-start; }
.self-end { align-self: flex-end; }
.self-center { align-self: center; }
.self-baseline { align-self: baseline; }
.self-stretch { align-self: stretch; }

// Gap
// ---------------------------------------------------------
@each $key, $value in tokens.$space {
	@if $key != 'auto' {
		@if meta.type-of($value) == 'map' {
			@each $subKey, $subValue in $value {
				.gap-#{$subKey} { gap: var(--space-#{$subKey}); }
			}
		} @else {
			.gap-#{$key} { gap: var(--space-#{$key}); }
		}
	}
}

// Row Gap
@each $key, $value in tokens.$space {
	@if $key != 'auto' {
		@if meta.type-of($value) == 'map' {
			@each $subKey, $subValue in $value {
				.gap-y-#{$subKey} { row-gap: var(--space-#{$subKey}); }
			}
		} @else {
			.gap-y-#{$key} { row-gap: var(--space-#{$key}); }
		}
	}
}

// Column Gap
@each $key, $value in tokens.$space {
	@if $key != 'auto' {
		@if meta.type-of($value) == 'map' {
			@each $subKey, $subValue in $value {
				.gap-x-#{$subKey} { column-gap: var(--space-#{$subKey}); }
			}
		} @else {
			.gap-x-#{$key} { column-gap: var(--space-#{$key}); }
		}
	}
}

// =========================================================
// Sizes
// =========================================================

// Text line length
// ---------------------------------------------------------
@each $key, $value in map.get(tokens.$sizes, 'text-width') {
	.text-width-#{$key} {
		max-inline-size: var(--text-width-#{$key});
	}
}

// =========================================================
// Typography
// =========================================================

// Font size
// ---------------------------------------------------------
@each $key, $value in map.get(tokens.$typography, 'font-size') {
	.text-#{$key} {
		font-size: var(--font-size-#{$key});
	}
};

// Text align & transform
// ---------------------------------------------------------
.text-left { text-align: left; }
.text-right { text-align: right; }
.text-center { text-align: center; }
.text-justify { text-align: justify; }

.capitalize { text-transform: capitalize; }
.uppercase { text-transform: uppercase; }
.lowercase { text-transform: lowercase; }

// =========================================================
// Colors
// =========================================================

// Background
// ---------------------------------------------------------
@each $key, $value in map.get(default.$colors, 'background') {
	.bg-#{$key} {
		background-color: var(--clr-bg-#{$key});
	}
}

// Foreground
// ---------------------------------------------------------
@each $key, $value in map.get(default.$colors, 'foreground') {
	.fg-#{$key} {
		color: var(--clr-bg-#{$key});
	}
}
